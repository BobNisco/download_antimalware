"""
A python script that will automatically download the latest version of popular
anti-malware programs. Accomplishes this by scraping the webpage, in this case
running a specific RegEx over the raw html of a given page to find the
download link.

Author: Bob Nisco
        http://BobNisco.com 
Date: 05-23-2012
"""

import urllib2
import re

def downloadFile(url):
    file_name = url.split('/')[-1]
    u = urllib2.urlopen(url)
    f = open(file_name, 'wb')
    meta = u.info()
    file_size = int(meta.getheaders("Content-Length")[0])
    print "Downloading: %s Bytes: %s" % (file_name, file_size)
    
    success = False
    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        status = r"%10d  [%3.2f%%]" % (file_size_dl, file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1)
        if (file_size_dl == file_size):
            success = True
        print status,
    f.close()
    
    if success:
        print '%s successfully downloaded.' %(file_name)
    else:
        print '%s did not download successfully. Please re-run this script to try again.' %(file_name)
        
def getFile(url, pattern):
    f = urllib2.urlopen(url)
    data = f.read()
    match = re.search(pattern, data)
    downloadFile(str(match.group()))
    
def main():
    sites = {
             'mbam' : ('http://en.kioskea.net/download/start/download-105-malwarebytes-anti-malware', r'[https?]+[:]+[//]+[dl]+[\.]+[commentcamarche]+[\.]+[\w\.\/\-]*'),
             'hmp' : ('http://www.surfright.nl/en/downloads', r'[https?]+[:]+[//]+[dl]+[\.]+[surfright]+[\w\.\/\-]*'),
             'combofix' : ('http://www.bleepingcomputer.com/download/combofix/dl/12/', r'[https?]+[:]+[//]+[download]+[\.]+[bleepingcomputer]+[\w\.\/\-]*'),
             'ccleaner' : ('http://www.piriform.com/ccleaner/download/standard', r'[https?]+[:]+[//]+[download]+[\.]+[piriform]+[.]+[com]+[\/]+[\w\.\/\-]*')}
    
    for s in sites:
        getFile(sites[s][0], sites[s][1])

if __name__ == '__main__':
    main()
